// <auto-generated />
using GameManager.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameManager.Migrations
{
    [DbContext(typeof(ManagerContext))]
    partial class ManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameManager.Model.Boardgames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Players")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserSheetId");

                    b.ToTable("Boardgames");
                });

            modelBuilder.Entity("GameManager.Model.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<int?>("UserSheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserSheetId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GameManager.Model.Puzzles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bits")
                        .HasColumnType("int");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserSheetId");

                    b.ToTable("Puzzles");
                });

            modelBuilder.Entity("GameManager.Model.UserSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("UserSheet");
                });

            modelBuilder.Entity("GameManager.Model.Boardgames", b =>
                {
                    b.HasOne("GameManager.Model.UserSheet", null)
                        .WithMany("Boardgames")
                        .HasForeignKey("UserSheetId");
                });

            modelBuilder.Entity("GameManager.Model.Members", b =>
                {
                    b.HasOne("GameManager.Model.UserSheet", null)
                        .WithMany("Members")
                        .HasForeignKey("UserSheetId");
                });

            modelBuilder.Entity("GameManager.Model.Puzzles", b =>
                {
                    b.HasOne("GameManager.Model.UserSheet", null)
                        .WithMany("Puzzles")
                        .HasForeignKey("UserSheetId");
                });

            modelBuilder.Entity("GameManager.Model.UserSheet", b =>
                {
                    b.Navigation("Boardgames");

                    b.Navigation("Members");

                    b.Navigation("Puzzles");
                });
#pragma warning restore 612, 618
        }
    }
}
